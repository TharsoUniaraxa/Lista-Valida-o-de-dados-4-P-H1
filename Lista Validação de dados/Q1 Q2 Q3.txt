Questões teóricas - Lista Desenvolvimento WEB

Questão 1
Descreva 3 importantes motivos para validarmos os dados em nossa API

Resposta:
O primeiro e mais importante é segurança, pois validar deve evitar ataques por dados inesperados via SQL por exemplo. Confiabilidade e Experiência do cliente são outros dois pontos de atenção a se dar na API, pois a validação precoce de dados e a inserção apenas de dados em formatos corretos evitam erros e retrabalho (HTTP 400 + mensagem estruturada). 

Questão 2
Considere as seguintes entidades, descreva quais as validações você faria e como
faria:

a) Cenário 1:
Cadastro de cliente com:
a. Nome (Exemplo resposta: Mínimo 3 caracteres, e obrigatório)
b. CPF
c. Data Nascimento
d. Email
e. Telefone
f. Senha
g. Cep
h. Rua
i. Bairro
j. Cidade
k. Estado

Resposta:
Nome: obrigatório, ≥3 e ≤100 chars.
CPF: obrigatório, 11 dígitos, validar dígitos verificadores; checar unicidade.
Data Nasc.: data válida, não futura, checar maioridade se necessário.
Email: formato válido, checar unicidade; ideal confirmar por e-mail.
Telefone: normalizar para E.164, validar comprimento.
Senha: ≥8 chars, regras de força; armazenar com hash (bcrypt/Argon2).
CEP: 8 dígitos; opcional: consultar API (ViaCEP) para preencher endereço.
Rua/Bairro/Cidade/Estado: validar comprimento; Estado deve ser UF válida.

b) Cenário 2: Cadastro de Disciplina
a. Nome
b. Carga horária
c. Objetivo
d. Ementa
e. Semestre
f. Ano
g. Nome professor

Resposta:
Nome: obrigatório, ≥3 chars, possível unicidade por semestre/ano.
Carga horária: inteiro positivo, checar range.
Objetivo/Ementa: textos com mínimo razoável; sanitizar HTML.
Semestre: enum (1/2) ou range válido.
Ano: inteiro plausível (≤ ano atual +1).

Questão 3
Em sala, mostramos as validações utilizando inicialmente “o bom e velho if/else”,
porém falamos que esse processo pode conter vantagens e desvantagens, por
isso, mostramos depois o data annotation. Descreva comparando as duas
técnicas apresentando vantagens e desvantagens.

Resposta:
If/else: flexível para regras complexas, mas verboso e repetitivo.
Data Annotations: conciso e consistente, integra com frameworks; menos flexível (mas permite validadores customizados).
Recomendação: combinar — anotações para regras simples + validações imperativas para regras de negócio complexas.